---
title: "CPSC 330 Lecture 23: Deployment and conclusion"
author: "Firas Moosvi"
format: 
    revealjs:
      embed-resources: true
      slide-number: true
      smaller: true
      center: true
      logo: img/UBC-CS-logo.png
      theme: dracula
      resources:
        - data/
        - img/        
---

## Announcements

- Last class today üéâ ! 
- HW9 is due today June 18th at 9:59 PM
- Last Learning Log (LL05) due June 19th at 9:59 PM
- Bonus Learning Log (if you missed one) due June 19th at 9:59 PM
- Ethics bonus assignment is due tomorrow (June 19th) at 11:59pm. 
- Final Exam Study guide has been posted!

# Ethics Class

- See separate slides!

## Course evaluations (~10 mins)

https://canvas.ubc.ca/courses/165412/external_tools/53187

## Break


## ‚ùì‚ùì Questions for you

Imagine you've created a machine learning model and are eager to share it with others. Consider the following scenarios for sharing your model:

- **To a non-technical Audience:** How would you present your model to friends and family who may not have a technical background?
- **To a technical audience:** How would you share your model with peers or professionals in the field who have a technical understanding of machine learning? 
- **In an academic or research setting:** How would you disseminate your model within academic or research communities?
<br><br><br><br><br><br><br><br><br><br>


## Try out this moment predictor

[https://cpsc330-moment-predictor.onrender.com/](https://cpsc330-moment-predictor.onrender.com/)

- In this lecture, I will show you how to set up/develop this. 

## What is deployment? 

- After we train a model, we want to use it!
- The user likely does not want to install your Python stack, train your model.
- You don't necessarily want to share their dataset.
- So we need to do two things:
  1. Save/store your model for later use.
  2. Make the saved model conveniently accessible.

## We will use the tools below for 

- Saving the model: We will use [Joblib](https://joblib.readthedocs.io/) 
- Making the saved model conveniently accessible: [Flask](https://flask.palletsprojects.com/) & [render](https://render.com/) 

## Group Work: Class Demo & Live Coding

For this demo, each student should [click this link](https://github.com/new?template_name=lecture24_demo&template_owner=ubc-cpsc330) to create a new repo in their accounts, then clone that repo locally to follow along with the demo from today.

## Web App 

## API

## What did we cover 
- Part 1: Supervised learning on tabular data: ML fundamentals, preprocessing and data encoding, a bunch of models, evaluation metrics, feature importances and model transparency, feature selection, hyperparameter optimization
 
- Part 2: Dealing with other non-tabular data types: Clustering, recommender systems, computer vision with pre-trained deep learning models (high level), language data, text preprocessing, embeddings, topic modeling, time series, right-censored data / survival analysis

- Part 3: Communication, Ethics, and Deployment

## What we didn't cover 
- How do these models work under the hood 

![](img/modular-ML.png)

## What would I do differently?

Lots of room for improvement. Here are some things on my mind.  

- Balance the pace of the course a bit more (too intense at the beginning, too relaxed at the end!)
- Flipped classroom in a more effective way in the first part of the course. 
- More demos during lecture time
- Worksheets/practice questions during tutorials 
- Add a course project !?!
- Add more interactive components in the lectures
- Some material to cover: dealing with outliers, data collection, large language models

## What next?

If you want to further develop your machine learning skills:
- Practice!
- Work on your own projects
- Work hard and be consistent.

- If you are interested in research in machine learning
  - Take CPSC 340. If you do not have the required prereqs you can try to audit it.
- Get into the habit of reading papers and replicating results

## ‚ùì‚ùì Questions for you

For each of the scenarios below 

- Identify if ML is a good solution for a problem.
- If yes
    - Frame the problem to a ML problem.
    - Discuss what kind of features you would need to effectively solve the problem
    - What would be a reasonable baseline? 
    - Which model would be a suitable model for the given scenario? 
    - What would be the appropriate success metrics.


## ‚ùì‚ùì Questions for you

|     App           | Goal | 
|-------------------|--------------------------|
| QueuePredictor app    |  Inform callers how long they'll wait on hold given the current call volume|
| To-doList App    | Keep track of the tasks that a user inputs and organize them by date | 
| SegmentSphere App | To segment customers to tailor marketing strategies based on purchasing behavior |
| Video app	        | Recommend useful videos|
| Dining app        | Identify cuisine by a restaurant's menu|
| Weather app       | Calculate precipitation in six hour increments for a geographic region  |
| EvoCarShare app   | Calculate number of car rentals in four increaments at a particular Evo parking spot |
| Pharma app| Understand the effect of a new drug on patient survival time |


## Conclusion & farewell

That‚Äôs all, folks. We made it! Good luck on your final exam! When you get a chance, please let me know what worked for you and what didn‚Äôt work for you in this course.

![](img/eva-congrats.png)